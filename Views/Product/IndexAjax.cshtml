@using Newtonsoft.Json;
@model QA.TNGo_v2.Models.Product;

@{
    var listImg = @Model.Images;

    ViewData["Title"] = "IndexAjax";
}


<h1>IndexAjax Product</h1>
<div>
    <div class="row p-3 product" style="border:1px solid gray;">
        <div class="col-7">
            <img src="@Html.DisplayFor(model => model.Thumbnail)" class="product-img-top" alt="" style="width:100%;height:auto;object-fit:cover;">
        </div>
        <div class="product-body col-5" style="height:300px;">
            <h5 class="product-@Html.DisplayFor(model => model.CategoryID) product-title">@Html.DisplayFor(model => model.Name)</h5>
            <h5 class="product-@Html.DisplayFor(model => model.CategoryID) product-title">@Html.DisplayFor(model => model.Type)</h5>
            <h5 class="product-@Html.DisplayFor(model => model.CategoryID) product-title">@Html.DisplayFor(model => model.Price)</h5>
            <h5 class="product-@Html.DisplayFor(model => model.CategoryID) product-title">@Html.DisplayFor(model => model.Quantity)</h5>
            @{
                var listSize = Model?.Sizes;
                var resultSize = JsonConvert.DeserializeObject<List<SizeItem>>(listSize);
            }
            @foreach (var size in resultSize)
            {
                <h1>@size.size</h1>
            }
            <p>@Html.DisplayFor(model => model.Description)</p>

        </div>
        <div class="col-4">
            @{
                var results = JsonConvert.DeserializeObject<List<String>>(listImg);
                foreach (var img in results)
                {
                    <img src="@img" style="width:100%;object-fit:cover;">
                }
            }

        </div>
    </div>
</div>
